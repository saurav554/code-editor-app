{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","className","concat","type","onClick","prevOpen","index_es","icon","faCompressAlt","faExpandAlt","react_codemirror2","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.13e77241.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  const [open, setOpen] = useState(true)\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}